(defn help ()
  (print "Help for trebek"))

(def nil (list))

(defmacro while (cond body)
  (list 'if cond
    (list 'do
      body
      (list 'while cond body))
    'nil))

(defmacro not (cond)
  (list 'if cond false true))

(def ! not)

(defmacro != (a b)
  (list 'not (list '= a b)))

(defmacro for (it items body)
  (list 'let (list '__rest items)
    (list 'while (list '!= '__rest 'nil)
      (list 'do
        (list 'let (list it (list 'car '__rest)) body)
        (list 'set-local '__rest (list 'cdr '__rest))))))

(defn range (end)
  (let (i end nums (list))
    (do
      (while (< 0 i)
        (do
          (set-local i (- i 1))
          (set-local nums (cons i nums))))
      nums)))
